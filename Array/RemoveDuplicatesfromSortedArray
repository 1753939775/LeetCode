/**LeetCode 第26题，将数组中重复元素移除掉**/
/* Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.
Do not allocate extra space for another array, you must do this in place with constant memory.
For example,Given input array nums = [1,1,2],
Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. 
It doesn't matter what you leave beyond the new length. */

//大神代码
int count = 0;
for(int i = 1; i < n; i++){
    if(A[i] == A[i-1]) count++;
    else A[i-count] = A[i];
}
return n-count;


//另一个代码，相同原理，执行时间长，多了删除操作，本题要求不必要
int Solution::removeDuplicates(vector<int>& nums) {
    int num_duplicates = 0;
    for (int i = 1; i < nums.size(); ++i) {
        if (nums[i] == nums[i - 1]) {
            ++num_duplicates;
        } else {
            nums[i - num_duplicates] = nums[i];
        }
    }
    nums.erase(nums.end() - num_duplicates, nums.end());  // add this line!!!
    return nums.size();
}
